# Generated by Django 4.2.11 on 2024-05-13 17:02
import csv
import logging

from django.db import migrations
from django.core.paginator import Paginator

# ====

logger = logging.getLogger(__name__)

# ====

MAJORS = {'USD','EUR','GBP','CAD','MXN','AUD'}

def update_cny_execute(app, schema_editor):

    CnyExecution = app.get_model('oems', 'CnyExecution')

    # Retrieve your model's queryset
    queryset = CnyExecution.objects.all().order_by('id').select_related('company','fxpair')

    cny_to_update = []

    # Create a Paginator object, with say 10 items per page
    paginator = Paginator(queryset, 1000)
    dry_run = False

    for page_number in paginator.page_range:
        page = paginator.page(page_number)
        for _ in page:

            ccy1 = _.fxpair.quote_currency.mnemonic
            ccy2 = _.fxpair.base_currency.mnemonic

            if ccy1 != ccy2 and ccy1 not in MAJORS and ccy2 not in MAJORS:
                # delete this perm
                logger.info(f'deleting trading perm: {ccy1}/{ccy2}')
                if not dry_run: _.delete()
                continue
                
            if _.spot_broker == 'CORPAY_MP':
                _.spot_broker = 'CORPAY'
                cny_to_update.append(_)

        if cny_to_update:
            logger.info(f'updating {len(cny_to_update)} items')
            if not dry_run: CnyExecution.objects.bulk_update(cny_to_update, ['spot_broker'])
            cny_to_update.clear()

class Migration(migrations.Migration):
    dependencies = [
        ('oems', '0086_alter_manualrequest_time_in_force'),
    ]

    operations = [
        migrations.RunPython(update_cny_execute),
    ]
