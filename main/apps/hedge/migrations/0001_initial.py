# Generated by Django 3.2.8 on 2022-05-09 20:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('marketdata', '0001_initial'),
        ('account', '0002_brokeraccount'),
        ('currency', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyHedgeAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.company')),
                ('virtual_data_cut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cut', to='marketdata.datacut')),
            ],
        ),
        migrations.CreateModel(
            name='OMSOrderRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unrounded_amount', models.FloatField()),
                ('requested_amount', models.FloatField()),
                ('filled_amount', models.FloatField(null=True)),
                ('total_price', models.FloatField(null=True)),
                ('pnl_quote_currency', models.FloatField(null=True)),
                ('pnl_account_currency', models.FloatField(null=True)),
                ('status', models.IntegerField(choices=[(1, 'Open'), (2, 'Closed')], default=1)),
                ('company_hedge_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hedge.companyhedgeaction')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currency.fxpair')),
            ],
        ),
        migrations.CreateModel(
            name='HedgeSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_horizon_days', models.IntegerField(default=7300)),
                ('margin_budget', models.FloatField()),
                ('method', models.CharField(default='NO_HEDGE', max_length=255)),
                ('custom', models.JSONField(default=None, null=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hedge_settings', to='account.account')),
            ],
        ),
        migrations.CreateModel(
            name='FxSpotSpread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('spread', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.broker')),
                ('data_cut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketdata.datacut')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currency.fxpair')),
            ],
            options={
                'verbose_name_plural': 'fxspotspreads',
                'unique_together': {('pair', 'data_cut', 'broker')},
            },
        ),
        migrations.CreateModel(
            name='FxSpotMargin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.broker')),
                ('data_cut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketdata.datacut')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currency.fxpair')),
            ],
            options={
                'verbose_name_plural': 'fxspotmargins',
                'unique_together': {('pair', 'data_cut', 'broker')},
            },
        ),
        migrations.CreateModel(
            name='FxSpotCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.broker')),
                ('data_cut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketdata.datacut')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currency.fxpair')),
            ],
            options={
                'verbose_name_plural': 'fxspotcommissions',
                'unique_together': {('pair', 'data_cut', 'broker')},
            },
        ),
        migrations.CreateModel(
            name='FxRolloverRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('long_rate', models.FloatField()),
                ('short_rate', models.FloatField()),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.broker')),
                ('data_cut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketdata.datacut')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currency.fxpair')),
            ],
            options={
                'verbose_name_plural': 'fxspotspreads',
                'unique_together': {('pair', 'data_cut', 'broker')},
            },
        ),
        migrations.CreateModel(
            name='FxPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0.0)),
                ('total_price', models.FloatField(default=0.0, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fxaccount', to='account.account')),
                ('company_hedge_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hedge.companyhedgeaction')),
                ('fxpair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fxpair', to='currency.fxpair')),
            ],
            options={
                'verbose_name_plural': 'fxpositions',
                'unique_together': {('company_hedge_action', 'account', 'fxpair')},
            },
        ),
        migrations.CreateModel(
            name='AccountHedgeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_amount', models.FloatField()),
                ('filled_amount', models.FloatField(null=True)),
                ('avg_price', models.FloatField(null=True)),
                ('realized_pnl_quote', models.FloatField(null=True)),
                ('realized_pnl_domestic', models.FloatField(null=True)),
                ('status', models.IntegerField(choices=[(1, 'Open'), (2, 'Closed')], default=1)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.account')),
                ('company_hedge_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hedge.companyhedgeaction')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currency.fxpair')),
            ],
            options={
                'verbose_name_plural': 'accounthedgerequests',
                'unique_together': {('company_hedge_action', 'account', 'pair')},
            },
        ),
    ]
