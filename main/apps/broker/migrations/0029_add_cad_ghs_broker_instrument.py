# Generated by Django 4.2.15 on 2024-11-08 09:27

from django.db import migrations
from django.apps.registry import Apps


CAD_GHS = 'CADGHS'


def add_cad_ghs_broker_instruments(apps:Apps, schema_editor):
    Instrument = apps.get_model('marketdata', 'Instrument')
    Broker = apps.get_model('broker', 'Broker')
    BrokerInstrument = apps.get_model('broker', 'BrokerInstrument')
    monex = Broker.objects.get(broker_provider="MONEX")
    corpay = Broker.objects.get(broker_provider="CORPAY")
    nium = Broker.objects.get(broker_provider="NIUM")
    brokers = [
        monex,
        corpay,
        nium
    ]

    spot_instrument = CAD_GHS
    instrument = Instrument.objects.get(name=f"{spot_instrument}-SPOT")
    for broker in brokers:
        BrokerInstrument.objects.get_or_create(
            broker=broker,
            instrument=instrument,
            base_ccy=spot_instrument[:3],
            counter_ccy=spot_instrument[3:],
            defaults={
                "active": True,
                "buy": True,
                "sell": True,
                "buy_wallet": True,
                "sell_wallet": True,
                "buy_cost": 0.0,
                "buy_cost_unit": 'pct',
                "sell_cost": 0.0,
                "sell_cost_unit": 'pct',
                "buy_fee": 0.0,
                "buy_fee_unit": 'pct',
                "sell_fee": 0.0,
                "sell_fee_unit": 'pct',
                "funding_models": ['postfunded'],
                "execution_types": ['voice'],
                "api_types": ['manual'],
                "wire_fee": 0.0,
                "wire_fee_unit": 'usd'
            }
        )

    fwd_instrument = CAD_GHS
    instrument = Instrument.objects.get(name=f"{fwd_instrument}-FWD")
    for broker in brokers:
        if broker.broker_provider == 'NIUM':
            continue

        BrokerInstrument.objects.get_or_create(
            broker=broker,
            instrument=instrument,
            base_ccy=fwd_instrument[:3],
            counter_ccy=fwd_instrument[3:],
            defaults={
                "active": True,
                "buy": True,
                "sell": False,
                "buy_wallet": True,
                "sell_wallet": True,
                "buy_cost": 0.0,
                "buy_cost_unit": 'pct',
                "sell_cost": 0.0,
                "sell_cost_unit": 'pct',
                "buy_fee": 0.0,
                "buy_fee_unit": 'pct',
                "sell_fee": 0.0,
                "sell_fee_unit": 'pct',
                "funding_models": ['postfunded'],
                "execution_types": ['voice'],
                "api_types": ['manual'],
                "wire_fee": 0.0,
                "wire_fee_unit": 'usd'
            }
        )

def remove_cad_ghs_broker_instruments(apps:Apps, schema_editor):
    BrokerInstrument = apps.get_model('broker', 'BrokerInstrument')
    pair = CAD_GHS
    cad_ghs_brk_inst = BrokerInstrument.objects.filter(
        base_ccy=pair[:3], counter_ccy=pair[3:]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('broker', '0028_brokertradingsession'),
        ('marketdata', '0048_add_cad_ghs_instrument_data')
    ]

    operations = [
        migrations.RunPython(add_cad_ghs_broker_instruments, remove_cad_ghs_broker_instruments)
    ]
