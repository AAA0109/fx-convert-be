# Generated by Django 4.2.15 on 2024-10-23 12:37

from django.db import migrations
from django.apps.registry import Apps


def add_sle_rwf_broker_instruments(apps:Apps, schema_editor):
    spot_instruments = [
        'USDRWF', 'RWFUSD', 'USDSLE', 'SLEUSD'
    ]
    fwd_instruments = [
        'USDRWF', 'RWFUSD', 'USDSLE', 'SLEUSD'
    ]
    Instrument = apps.get_model('marketdata', 'Instrument')
    Broker = apps.get_model('broker', 'Broker')
    BrokerInstrument = apps.get_model('broker', 'BrokerInstrument')
    monex = Broker.objects.get(broker_provider="MONEX")
    corpay = Broker.objects.get(broker_provider="CORPAY")
    brokers = [
        monex,
        corpay
    ]
    for spot_instrument in spot_instruments:
        instrument = Instrument.objects.get(name=f"{spot_instrument}-SPOT")
        for broker in brokers:
            BrokerInstrument.objects.get_or_create(
                broker=broker,
                instrument=instrument,
                base_ccy=spot_instrument[:3],
                counter_ccy=spot_instrument[3:],
                defaults={
                    "active": True,
                    "buy": True,
                    "sell": True,
                    "buy_wallet": True,
                    "sell_wallet": True,
                    "buy_cost": 0.0,
                    "buy_cost_unit": 'pct',
                    "sell_cost": 0.0,
                    "sell_cost_unit": 'pct',
                    "buy_fee": 0.0,
                    "buy_fee_unit": 'pct',
                    "sell_fee": 0.0,
                    "sell_fee_unit": 'pct',
                    "funding_models": ['postfunded'],
                    "execution_types": ['voice'],
                    "api_types": ['manual'],
                    "wire_fee": 0.0,
                    "wire_fee_unit": 'usd'
                }

            )
    for fwd_instrument in fwd_instruments:
        instrument = Instrument.objects.get(name=f"{fwd_instrument}-FWD")
        for broker in brokers:
            BrokerInstrument.objects.get_or_create(
                broker=broker,
                instrument=instrument,
                base_ccy=fwd_instrument[:3],
                counter_ccy=fwd_instrument[3:],
                defaults={
                    "active": True,
                    "buy": True,
                    "sell": True,
                    "buy_wallet": True,
                    "sell_wallet": True,
                    "buy_cost": 0.0,
                    "buy_cost_unit": 'pct',
                    "sell_cost": 0.0,
                    "sell_cost_unit": 'pct',
                    "buy_fee": 0.0,
                    "buy_fee_unit": 'pct',
                    "sell_fee": 0.0,
                    "sell_fee_unit": 'pct',
                    "funding_models": ['postfunded'],
                    "execution_types": ['voice'],
                    "api_types": ['manual'],
                    "wire_fee": 0.0,
                    "wire_fee_unit": 'usd'
                }

            )

class Migration(migrations.Migration):

    dependencies = [
        ('broker', '0025_cnyexecution'),
        ('marketdata', '0047_add_instrument_data_for_sle_and_rwf'),

    ]

    operations = [
        migrations.RunPython(add_sle_rwf_broker_instruments, migrations.RunPython.noop)
    ]
