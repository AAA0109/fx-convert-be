# Generated by Django 4.2.3 on 2023-10-26 22:29

from django.db import migrations


def seed_cost_tables(apps, schema_editor):
    transaction_data = {
        "p10": [
            {
                "average_volume_low": 0,
                "average_volume_high": 10000000,
                "transaction_sizes": [
                    {
                        "notional_low": 0,
                        "notional_high": 10000,
                        "cost_in_bps": 100
                    },
                    {
                        "notional_low": 10000,
                        "notional_high": 100000,
                        "cost_in_bps": 60
                    },
                    {
                        "notional_low": 100000,
                        "notional_high": 1000000,
                        "cost_in_bps": 50
                    },
                    {
                        "notional_low": 1000000,
                        "notional_high": None,
                        "cost_in_bps": 40
                    }
                ]

            },
            {
                "average_volume_low": 10000000,
                "average_volume_high": 25000000,
                "transaction_sizes": [
                    {
                        "notional_low": 0,
                        "notional_high": 10000,
                        "cost_in_bps": 90
                    },
                    {
                        "notional_low": 10000,
                        "notional_high": 100000,
                        "cost_in_bps": 50
                    },
                    {
                        "notional_low": 100000,
                        "notional_high": 1000000,
                        "cost_in_bps": 40
                    },
                    {
                        "notional_low": 1000000,
                        "notional_high": None,
                        "cost_in_bps": 30
                    }
                ]

            },
            {
                "average_volume_low": 25000000,
                "average_volume_high": 50000000,
                "transaction_sizes": [
                    {
                        "notional_low": 0,
                        "notional_high": 10000,
                        "cost_in_bps": 80
                    },
                    {
                        "notional_low": 10000,
                        "notional_high": 100000,
                        "cost_in_bps": 40
                    },
                    {
                        "notional_low": 100000,
                        "notional_high": 1000000,
                        "cost_in_bps": 30
                    },
                    {
                        "notional_low": 1000000,
                        "notional_high": None,
                        "cost_in_bps": 20
                    }
                ]

            }
        ],
        "other": [
            {
                "average_volume_low": 0,
                "average_volume_high": 10000000,
                "transaction_sizes": [
                    {
                        "notional_low": 0,
                        "notional_high": 10000,
                        "cost_in_bps": 100
                    },
                    {
                        "notional_low": 10000,
                        "notional_high": 100000,
                        "cost_in_bps": 90
                    },
                    {
                        "notional_low": 100000,
                        "notional_high": 1000000,
                        "cost_in_bps": 80
                    },
                    {
                        "notional_low": 1000000,
                        "notional_high": None,
                        "cost_in_bps": 70
                    }
                ]

            },
            {
                "average_volume_low": 10000000,
                "average_volume_high": 25000000,
                "transaction_sizes": [
                    {
                        "notional_low": 0,
                        "notional_high": 10000,
                        "cost_in_bps": 90
                    },
                    {
                        "notional_low": 10000,
                        "notional_high": 100000,
                        "cost_in_bps": 70
                    },
                    {
                        "notional_low": 100000,
                        "notional_high": 1000000,
                        "cost_in_bps": 60
                    },
                    {
                        "notional_low": 1000000,
                        "notional_high": None,
                        "cost_in_bps": 50
                    }
                ]

            },
            {
                "average_volume_low": 25000000,
                "average_volume_high": 50000000,
                "transaction_sizes": [
                    {
                        "notional_low": 0,
                        "notional_high": 10000,
                        "cost_in_bps": 80
                    },
                    {
                        "notional_low": 10000,
                        "notional_high": 100000,
                        "cost_in_bps": 50
                    },
                    {
                        "notional_low": 100000,
                        "notional_high": 1000000,
                        "cost_in_bps": 40
                    },
                    {
                        "notional_low": 1000000,
                        "notional_high": None,
                        "cost_in_bps": 30
                    }
                ]

            }
        ]
    }

    aum_data = {
        "all": [
            {
                "average_volume_low": 0,
                "average_volume_high": 10000000,
                "rates": {
                    "annualized": 100,
                    "minimum": 30
                }
            },
            {
                "average_volume_low": 10000000,
                "average_volume_high": 25000000,
                "rates": {
                    "annualized": 80,
                    "minimum": 25
                }
            },
            {
                "average_volume_low": 25000000,
                "average_volume_high": 50000000,
                "rates": {
                    "annualized": 60,
                    "minimum": 20
                }
            }
        ]
    }

    TransactionCost = apps.get_model('corpay', 'TransactionCost')
    AumCost = apps.get_model('corpay', 'AumCost')

    for category in transaction_data:
        category_data = transaction_data[category]
        for _category_data in category_data:
            average_volume_low = _category_data['average_volume_low']
            average_volume_high = _category_data['average_volume_high']
            for _transaction_data in _category_data['transaction_sizes']:
                transaction_cost = TransactionCost(
                    currency_category=category,
                    average_volume_low=average_volume_low,
                    average_volume_high=average_volume_high,
                    notional_low=_transaction_data['notional_low'],
                    notional_high=_transaction_data['notional_high'],
                    cost_in_bps=_transaction_data['cost_in_bps']
                )
                transaction_cost.save()

    for category in aum_data:
        category_data = aum_data[category]
        for _category_data in category_data:
            average_volume_low = _category_data['average_volume_low']
            average_volume_high = _category_data['average_volume_high']
            rates_data = _category_data['rates']
            aum_cost = AumCost(
                currency_category=category,
                average_volume_low=average_volume_low,
                average_volume_high=average_volume_high,
                annualized_rate=rates_data['annualized'],
                minimum_rate=rates_data['minimum']
            )
            aum_cost.save()


class Migration(migrations.Migration):
    dependencies = [
        ('corpay', '0033_alter_aumcost_currency_category_and_more'),
    ]

    operations = [
        migrations.RunPython(seed_cost_tables)
    ]
