# Generated by Django 4.2.15 on 2024-09-06 13:40

from django.db import migrations

from django.apps.registry import Apps

SETTLEMENT_APP = 'settlement'
BROKER_APP = 'broker'

def separate_bene_broker_relation(apps: Apps, schema_editor):
    BeneSyncResult = apps.get_model(SETTLEMENT_APP, 'BeneficiaryBrokerSyncResult')

    sync_results = BeneSyncResult.objects.all()
    for item in sync_results:
        item.beneficiary = item.beneficiary_broker.beneficiary
        item.broker = item.beneficiary_broker.broker
        item.save()

def join_bene_broker_relation(apps: Apps, schema_editor):
    BeneficiaryBroker = apps.get_model(SETTLEMENT_APP, 'BeneficiaryBroker')
    BeneSyncResult = apps.get_model(SETTLEMENT_APP, 'BeneficiaryBrokerSyncResult')

    sync_results = BeneSyncResult.objects.all()
    for item in sync_results:
        try:
            bene_broker = BeneficiaryBroker.objects.get(beneficiary=item.beneficiary, broker=item.broker)
            item.beneficiary_broker = bene_broker
            item.save()
        except Exception as e:
            print(f'Revert relation failed for {item.pk}')
            pass

class Migration(migrations.Migration):

    dependencies = [
        ('settlement', '0044_beneficiarybrokersyncresult_beneficiary_and_more'),
    ]

    operations = [
        migrations.RunPython(separate_bene_broker_relation, join_bene_broker_relation)
    ]
