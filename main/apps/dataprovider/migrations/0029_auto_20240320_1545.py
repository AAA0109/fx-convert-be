# Generated by Django 4.2.10 on 2024-03-20 15:45
from django.apps.registry import Apps
from django.db import migrations
from main.apps.dataprovider.models import DataProvider as Prov
from main.apps.dataprovider.models import Source as Src
from main.apps.dataprovider.models import Profile as Prf


def add_remove_fincal_sftp_profile(apps: Apps, operation:str = 'add'):
    DataProvider = apps.get_model('dataprovider', 'DataProvider')
    Source = apps.get_model('dataprovider', 'Source')
    Profile = apps.get_model('dataprovider', 'Profile')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    TradingHolidaysCode = apps.get_model('marketdata', 'TradingHolidaysCodeFincal')
    TradingHolidaysInfo = apps.get_model('marketdata', 'TradingHolidaysInfoFincal')
    TradingHolidays = apps.get_model('marketdata', 'TradingHolidaysFincal')
    TradingCalendar = apps.get_model('marketdata', 'TradingCalendarFincal')

    ct_trading_holidays_code = ContentType.objects.get_for_model(TradingHolidaysCode)
    ct_trading_holidays_info = ContentType.objects.get_for_model(TradingHolidaysInfo)
    ct_trading_holidays = ContentType.objects.get_for_model(TradingHolidays)
    ct_trading_calendar = ContentType.objects.get_for_model(TradingCalendar)

    profiles = [
        {
            'name': 'Trading Holidays Code',
            'filename': 'CODES_.*',
            'directory': 'trading_holidays/fincal/code'
        },
        {
            'name': 'Trading Holidays Info',
            'filename': 'INFO_.*',
            'directory': 'trading_holidays/fincal/info'
        },
        {
            'name': 'Trading Holidays',
            'filename': 'CATHOL_.*',
            'directory': 'trading_holidays/fincal/data'
        },
         {
            'name': 'Trading Calendar',
            'filename': 'TH_DUMP_HIST_.*',
            'directory': 'trading_calendar/fincal/data'
        }
    ]

    cts = [
        ct_trading_holidays_code,
        ct_trading_holidays_info,
        ct_trading_holidays,
        ct_trading_calendar
    ]

    if operation == 'add':

        fincal_dataprovider, created = DataProvider.objects.get_or_create(
            provider_handler=Prov.ProviderHandlers.FIN_CAL,
            name="Fin Cal"
        )

        fincal_sftp_source, created = Source.objects.get_or_create(
            data_type=Src.DataType.SFTP,
            data_provider=fincal_dataprovider,
            name='Fin Cal SFTP'
        )

        for i in range(len(profiles)):
            name = f"{profiles[i]['name']} SFTP"
            filename = profiles[i]['filename']
            directory = profiles[i]['directory']

            profile, created = Profile.objects.get_or_create(
                name=name,
                source=fincal_sftp_source,
                filename=filename,
                directory=directory,
                file_format=Prf.FileFormat.CSV,
                target=cts[i]
            )

    elif operation == 'remove':
        try:
            fincal_dataprovider = DataProvider.objects.get(
                provider_handler=Prov.ProviderHandlers.FIN_CAL,
                name="Fin Cal"
            )

            fincal_sftp_source = Source.objects.get(
                data_type=Src.DataType.SFTP,
                data_provider=fincal_dataprovider,
                name='Fin Cal SFTP'
            )

            for i in range(len(profiles)):
                name = f"{profiles[i]['name']} SFTP"
                filename = profiles[i]['filename']
                directory = profiles[i]['directory']

                try:
                    profile = Profile.objects.get(
                        name=name,
                        source=fincal_sftp_source,
                        filename=filename,
                        directory=directory,
                        file_format=Prf.FileFormat.CSV,
                        target=cts[i]
                    )
                    profile.delete()
                except Exception as e:
                    continue

        except Exception as e:
            pass


def add_fincal_sftp_importers(apps: Apps, schema_editor):
    add_remove_fincal_sftp_profile(apps=apps)


def remove_fincal_sftp_importers(apps: Apps, schema_editor):
    add_remove_fincal_sftp_profile(apps=apps, operation='remove')



class Migration(migrations.Migration):

    dependencies = [
        ('dataprovider', '0028_alter_dataprovider_provider_handler'),
        ('marketdata', '0030_rename_marketdata__date_623650_idx_marketdata__date_f8e15e_idx_and_more'),
    ]

    operations = [
        migrations.RunPython(add_fincal_sftp_importers, remove_fincal_sftp_importers)
    ]
