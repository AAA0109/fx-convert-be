# Generated by Django 3.2.8 on 2022-05-06 00:47

from django.db import migrations, models
import django.db.models.deletion
import main.apps.dataprovider.models.file


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('marketdata', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('currency', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_handler', models.CharField(choices=[('reuters', 'Reuters'), ('ice', 'ICE'), ('ibkr', 'IBKR')], default=None, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('enabled', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '    Data Providers',
            },
        ),
        migrations.CreateModel(
            name='Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(blank=True, max_length=255, null=True)),
                ('data_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataprovider.dataprovider')),
            ],
            options={
                'verbose_name_plural': ' Mappings',
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mapping_type', models.CharField(choices=[('text', 'Text'), ('currency', 'Currency'), ('fxpair', 'FX Pair'), ('ircurve', 'IR Curve')], default='text', max_length=20)),
                ('from_value', models.CharField(max_length=255)),
                ('to_value', models.CharField(blank=True, max_length=255, null=True)),
                ('mapping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataprovider.mapping')),
                ('to_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='currency.currency')),
                ('to_fxpair', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='currency.fxpair', verbose_name='To FX Pair')),
                ('to_ircurve', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='marketdata.ircurve', verbose_name='To IR Curve')),
            ],
            options={
                'verbose_name_plural': 'Values',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(choices=[('local_storage', 'Local Storage'), ('sftp', 'SFTP'), ('rest', 'REST API'), ('gcp', 'Google Cloud'), ('ibkr_tws', 'IBKR TWS')], default='local_storage', max_length=255)),
                ('sftp_host', models.CharField(blank=True, max_length=255, null=True, verbose_name='SFTP Host')),
                ('sftp_port', models.IntegerField(blank=True, null=True, verbose_name='SFTP Port')),
                ('sftp_username', models.CharField(blank=True, max_length=255, null=True, verbose_name='SFTP Username')),
                ('sftp_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='SFTP Password')),
                ('sftp_dir', models.CharField(blank=True, max_length=255, null=True, verbose_name='SFTP Directory')),
                ('name', models.CharField(max_length=255)),
                ('enabled', models.BooleanField(default=False)),
                ('data_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataprovider.dataprovider')),
            ],
            options={
                'verbose_name_plural': '   Sources',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('filename', models.CharField(blank=True, help_text='Supports regex pattern', max_length=255, null=True)),
                ('directory', models.CharField(blank=True, default='/', max_length=255, null=True)),
                ('file_format', models.CharField(choices=[('csv', 'csv'), ('xml', 'xml'), ('fixml', 'fixml'), ('api', 'api')], default='csv', max_length=10)),
                ('enabled', models.BooleanField(default=False)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataprovider.source')),
                ('target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': '  Profiles',
            },
        ),
        migrations.AddField(
            model_name='mapping',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataprovider.profile'),
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, default=None, null=True, upload_to=main.apps.dataprovider.models.file.file_uploaded_to)),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Queued'), (1, 'Downloaded'), (2, 'Preprocessing'), (3, 'Preprocessed'), (4, 'Error')], default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataprovider.dataprovider')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataprovider.profile')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataprovider.source')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
    ]
